do local Fluent=loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))();local CoreGui=game:GetService("CoreGui");local vallyFound=false;for _,v in pairs(CoreGui:GetChildren()) do if (v.Name=="ScreenGui") then for _,v2 in pairs(v:GetDescendants()) do if (v2:IsA("TextLabel") and (string.find(v2.Text,"vally")~=nil)) then vallyFound=true;end end end end if vallyFound then Fluent:Notify({Title="vally - Loader",Content="vally is already loaded. Press H to unhide window!",Duration=8});return;end local runService=game:GetService("RunService");local replicatedStorage=game:GetService("ReplicatedStorage");local userInputService=game:GetService("UserInputService");local TweenService=game:GetService("TweenService");local currentCamera=workspace.CurrentCamera;local lplr=game.Players.LocalPlayer;local version="1.1 BETA";local targetPlayer=nil;local viewingPlayer=nil;local targetTeam="Foreigner";local selectedTool=nil;local autofarmActive=nil;local targetLocation=nil;buyableTools={Deagle={toolname="Deagle",toolprice="30"},Passport={toolname="Passport",toolprice="25"},WorkPermit={toolname="Work Permit",toolprice="35"},Permit={toolname="Permit",toolprice="30"},TradePermit={toolname="Trade Permit",toolprice="35"},FirearmsPermit={toolname="Firearms Permit",toolprice="40"},Bat={toolname="Bat",toolprice="15"},P90={toolname="P90",toolprice="50"},M4A1={toolname="M4A1",toolprice="60"},Grenade={toolname="Grenade",toolprice="10"},Knife={toolname="Knife",toolprice="10"},Revolver={toolname="Revolver",toolprice="20"},WireCutters={toolname="Wire Cutters",toolprice="25"},AK47={toolname="AK-47",toolprice="85"},Molotov={toolname="Molotov",toolprice="10"},FakePassport={toolname="Fake Passport",toolprice="15"},C4={toolname="C4",toolprice="50"},FlameThrower={toolname="Flamethrower",toolprice="200"},RPG={toolname="RPG",toolprice="500"},Minigun={toolname="Minigun",toolprice="250"}};local function tweenChar(pos,time,cords) local CFrameTween=TweenService:Create(lplr.Character.HumanoidRootPart,TweenInfo.new(time,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0),{CFrame=pos.CFrame + cords });CFrameTween:Play();return CFrameTween;end local function camera_view(obj) currentCamera.CameraSubject=obj;end local function checkBalance() local leaderstats=lplr:FindFirstChild("leaderstats");if leaderstats then local money=leaderstats:FindFirstChild("Pesos");if money then return money.Value;end end end local function findPlayer(obj) matches=0;if workspace:FindFirstChild(obj) then if (game:GetService("Players"):GetPlayerFromCharacter(v)~=nil) then matches+=1 targetPlayer=game:GetService("Players"):GetPlayerFromCharacter(v);end else for _,v in pairs(workspace:GetChildren()) do if v:IsA("Model") then local match=string.match(string.lower(v.Name),"^"   .. string.lower(obj) );if match then if (game:GetService("Players"):GetPlayerFromCharacter(v)~=nil) then matches+=1 targetPlayer=game:GetService("Players"):GetPlayerFromCharacter(v);end end end end if (matches<=0) then for _,v in pairs(game:GetService("Players"):GetChildren()) do local match=string.match(string.lower(v.Name),"^"   .. string.lower(obj) );if match then matches+=1 targetPlayer=v;end end if (matches<=0) then for _,v in pairs(game:GetService("Players"):GetChildren()) do local match=string.match(string.lower(v.DisplayName),"^"   .. string.lower(obj) );if match then matches+=1 targetPlayer=v;end end end end end if (matches<=0) then Fluent:Notify({Title="vally Pro - Players",Content="Player not found.",Duration=4});elseif (matches>=2) then Fluent:Notify({Title="vally Pro - Players",Content="Found more than one player. Make a more specific input.",Duration=4});else Fluent:Notify({Title="vally Pro - Players",Content=targetPlayer.DisplayName   .. " ("   .. targetPlayer.Name   .. ") set as target." ,Duration=4});end end local function gunMod(mode) supportedGuns={"Deagle","Revolver","AK-47","Shotgun","P90","Minigun","M4A1"};local char=lplr.Character or lplr.CharacterAdded:Wait() ;local tool=char:FindFirstChildOfClass("Tool");if (tool and table.find(supportedGuns,tool.Name)) then if  not tool:FindFirstChild("ItemInfo") then Fluent:Notify({Title="vally Pro - Gun Mods",Content="Unknown error occured.",Duration=5});end local module=require(tool.ItemInfo).Config;if (mode=="ammo") then module.ReloadTime=0;elseif (mode=="damage") then module.Damage=999;elseif (mode=="op") then module.Damage=999;module.Automatic=true;module.ReloadTime=0;end Fluent:Notify({Title="vally Pro - Gun Mods",Content="Gun Mods applied.",Duration=5});elseif  not tool then Fluent:Notify({Title="vally Pro - Gun Mods",Content="No Tool equipped.",Duration=5});else Fluent:Notify({Title="vally Pro - Gun Mods",Content="Tool not supported.",Duration=5});end end local function buyTool(obj) local buyEvent=replicatedStorage:WaitForChild("Remotes"):WaitForChild("BuyTool");local toolName=obj.toolname;toolPath=replicatedStorage:WaitForChild("Tools"):WaitForChild(toolName);local toolPrice=obj.toolprice;if (tonumber(toolPrice)>checkBalance()) then return "no";end buyEvent:FireServer(tonumber(toolPrice),toolPath);end local fireEvent=replicatedStorage:WaitForChild("FireEvent");local function getPlayerHeadPosition(player) local character=player.Character;if character then local head=character:FindFirstChild("Head");if head then return head.Position;end end return Vector3.new(0,0,0);end local function predictPlayerPosition(player,timeAhead) local character=player.Character;if character then local humanoidRootPart=character:FindFirstChild("HumanoidRootPart");if humanoidRootPart then local velocity=humanoidRootPart.Velocity;local position=humanoidRootPart.Position;return position + (velocity * timeAhead * 0.3) ;end end return Vector3.new(0,0,0);end local function raycastFromTo(startPos,endPos,ignoreList) local raycastParams=RaycastParams.new();raycastParams.FilterType=Enum.RaycastFilterType.Exclude;raycastParams.FilterDescendantsInstances=ignoreList;local direction=(endPos-startPos).unit;local hitResult=workspace:Raycast(startPos,direction * 10000 ,raycastParams);return hitResult,hitResult and hitResult.Position ;end local function killPlayer(player) counter=0;repeat task.wait(0.1);if ( not player or  not player.Character or  not lplr.Character or (lplr.Character.Humanoid.Health<=0)) then return;end if (counter>=100) then Fluent:Notify({Title="vally Pro - Players",Content="Failed to kill "   .. player.Name ,Duration=5});return;end counter+=1 if player.Character:FindFirstChild("ForceField") then continue;end local tool=lplr.Character:FindFirstChildOfClass("Tool");if ( not tool or  not tool:FindFirstChild("ItemInfo")) then for _,v in pairs(lplr.Backpack:GetChildren()) do if v:FindFirstChild("ItemInfo") then tool=v;end end end if  not tool then a=buyTool(buyableTools['Revolver']);if (a=="no") then return a;end repeat task.wait();until lplr.Backpack:FindFirstChild("Revolver") tool=lplr.Backpack:FindFirstChild("Revolver");end task.wait();lplr.Character.Humanoid:EquipTool(tool);local headPos=getPlayerHeadPosition(player);local predictedPos=predictPlayerPosition(player,0.5);local gunMuzzlePos=predictedPos + Vector3.new(0,1,0) ;local ignoreList={};local hitResult,hitPos=raycastFromTo(gunMuzzlePos,predictedPos,ignoreList);local args={(hitResult and hitResult.Instance) or player.Character ,(hitResult and hitResult.Instance.CFrame:ToObjectSpace(CFrame.new(hitPos))) or Vector3.new(0,0,0) ,hitPos or predictedPos ,CFrame.new(gunMuzzlePos),200};fireEvent:FireServer(unpack(args));until  not player or  not player.Character or (player.Character.Humanoid.Health<=1)  end local function autofarm_sickle() if  not autofarmActive then return;end sickleVendorPart=nil;for _,v in pairs(workspace:GetChildren()) do if ((v.Name=="Wheat&Sickle") and v:FindFirstChild("Sickle")) then if v.Sickle:FindFirstChild("Handle"):FindFirstChild("ProximityPrompt") then sickleVendorPart=v.Sickle.Handle;end end end for _,v in pairs(game:GetService("Workspace")["Wheat&Sickle"]['Wheat']:GetChildren()) do if  not autofarmActive then continue;end local char=lplr.Character or lplr.CharacterAdded:Wait() ;local hum=char.Humanoid;hum:SetStateEnabled(Enum.HumanoidStateType.Seated,false);local tool=lplr.Backpack:FindFirstChild("Sickle") or lplr.Character:FindFirstChild("Sickle") ;if  not tool then tween=tweenChar(sickleVendorPart,4,Vector3.new(0,0.5,0));tween.Completed:Wait();task.wait(0.5);fireproximityprompt(sickleVendorPart.ProximityPrompt);task.wait(0.2);end if (v:IsA("BasePart") and v:FindFirstChild("ProximityPrompt")) then local tool=lplr.Backpack:FindFirstChild("Sickle") or lplr.Character:FindFirstChild("Sickle") ;hum:EquipTool(tool);tween=tweenChar(v,0.8,Vector3.new(0,0.5,0));tween.Completed:Wait();if  not autofarmActive then continue;end fireproximityprompt(v.ProximityPrompt);end end end local function autofarm_broom() if  not autofarmActive then return;end broomVendorPart=nil;for _,v in pairs(workspace:GetChildren()) do if ((v.Name=="Broom") and v:FindFirstChild("ProximityPrompt")) then broomVendorPart=v;end end broomVendorPart.Orientation=Vector3.new(0,0,0);for _,v in pairs(workspace:FindFirstChild("Trash"):GetChildren()) do if  not autofarmActive then continue;end local char=lplr.Character or lplr.CharacterAdded:Wait() ;local hum=char.Humanoid;hum:SetStateEnabled(Enum.HumanoidStateType.Seated,false);local tool=lplr.Backpack:FindFirstChild("Broom") or lplr.Character:FindFirstChild("Broom") ;if  not tool then tween=tweenChar(broomVendorPart,4,Vector3.new(0,2.5,0));tween.Completed:Wait();fireproximityprompt(broomVendorPart.ProximityPrompt);task.wait(0.2);end counter=0;if (v:IsA("Part") and  not v:FindFirstChild("Restore")) then local tool=lplr.Backpack:FindFirstChild("Broom") or lplr.Character:FindFirstChild("Broom") ;hum:EquipTool(tool);tween=tweenChar(v,2,Vector3.new(0,2.5,0));tween.Completed:Wait();if  not autofarmActive then continue;end repeat task.wait();tool:Activate();counter+=1 until v:FindFirstChild("Restore") or (counter>=100)  counter=0;end end end local function autofarm_mines() if  not autofarmActive then return;end pickaxeVendorPart=nil;for _,v in pairs(workspace:GetChildren()) do if ((v.Name=="Pickaxe") and v:FindFirstChild("ProximityPrompt")) then pickaxeVendorPart=v;end end pickaxeVendorPart.Orientation=Vector3.new(0,0,0);for _,v in pairs(game:GetService("Workspace")['OreCache']:GetChildren()) do if  not autofarmActive then continue;end local char=lplr.Character or lplr.CharacterAdded:Wait() ;hrp=char.HumanoidRootPart;local hum=char.Humanoid;hum:SetStateEnabled(Enum.HumanoidStateType.Seated,false);local tool=lplr.Backpack:FindFirstChild("Pickaxe") or lplr.Character:FindFirstChild("Pickaxe") ;if  not tool then tween=tweenChar(pickaxeVendorPart,4,Vector3.new(0.5,0,0));tween.Completed:Wait();if  not autofarmActive then continue;end task.wait(1);fireproximityprompt(pickaxeVendorPart.ProximityPrompt);task.wait(0.2);end counter=0;if (v:IsA("BasePart") and v:FindFirstChild("Health") and (v:FindFirstChild("Health").Value>0) and  not v:FindFirstChild("bugged")) then v.CanCollide=false;local objHealth=v.Health.Value;local tool=lplr.Backpack:FindFirstChild("Pickaxe") or lplr.Character:FindFirstChild("Pickaxe") ;hum:EquipTool(tool);tween=tweenChar(v,1,Vector3.new(0.5,0,0));tween.Completed:Wait();if ( not v or  not v:FindFirstChild("Health") or (v:FindFirstChild("Health").Value<=0)) then continue;end repeat task.wait(1);if  not v then break;end if (counter>=10) then if (v.Health.Value==objHealth) then local val=Instance.new("BoolValue");val.Name="bugged";val.Parent=v;break;end end hrp.CFrame=CFrame.lookAt(hrp.Position,Vector3.new(v.Position.X,hrp.Position.Y,v.Position.Z));task.wait();tool:Activate();counter+=1 until  not v or  not v:FindFirstChild("Health")  counter=0;end end end local Window=Fluent:CreateWindow({Title="vally Pro "   .. version ,SubTitle="by draxfm",TabWidth=160,Size=UDim2.fromOffset(580,460),Acrylic=false,Theme="Amethyst",MinimizeKey=Enum.KeyCode.H});local Tabs={Main=Window:AddTab({Title="Main",Icon="feather"}),Combat=Window:AddTab({Title="Combat",Icon="sword"}),Players=Window:AddTab({Title="Players",Icon="person-standing"}),Autofarm=Window:AddTab({Title="Autofarm",Icon="dollar-sign"}),More=Window:AddTab({Title="More",Icon="info"})};do Tabs.Main:AddParagraph({Title="Executor: "   .. identifyexecutor() ,Content=""});Tabs.Main:AddParagraph({Title="This script is in development. More features are to be added\nand existing features are to be expanded upon.",Content=""});local PlayerSection=Tabs.Main:AddSection("Player");local lplrWalkspeed=0;local lplrJumpPower=0;runService.Stepped:Connect(function() local lchar=lplr.Character or lplr.CharacterAdded:Wait() ;local hum=lchar:WaitForChild("Humanoid");hum.WalkSpeed=lplrWalkspeed;hum.JumpPower=lplrJumpPower;end);local wsSlider=Tabs.Main:AddSlider("walkspeed",{Title="Walkspeed",Description="",Default=16,Min=8,Max=60,Rounding=1,Callback=function(Value) lplrWalkspeed=Value;end});local jpowerSlider=Tabs.Main:AddSlider("jumppower",{Title="JumpPower",Description="",Default=50,Min=50,Max=200,Rounding=1,Callback=function(Value) lplrJumpPower=Value;end});local changeteamSection=Tabs.Main:AddSection("Change Team");local teamchangeDropdown=Tabs.Main:AddDropdown("teamchange",{Title="Select Team",Description="You will loose your current inventory!",Values={"Foreigner","Citizen","Guard (Group Join required)"},Multi=false,Default=1});init=false;teamchangeDropdown:OnChanged(function(val) if (init==false) then init=true;return;end local args={game:GetService("Teams"):WaitForChild("Guard")};if (string.find(val,"Guard")~=nil) then game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("SetTeam"):FireServer(game:GetService("Teams"):WaitForChild("Guard"));return;end game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("SetTeam"):FireServer(game:GetService("Teams"):WaitForChild(val));end);Tabs.Main:AddButton({Title="Foreigner to Citizen (No inventory loss)",Description="",Callback=function() if (lplr.Team~=game:GetService("Teams"):WaitForChild("Foreigner")) then Fluent:Notify({Title="vally Pro - Team Change",Content="You have to be Foreigner for this!",Duration=5});else local check1=Instance.new("Part");check1.Anchored=true;check1.CanCollide=false;check1.Transparency=1;check1.CFrame=CFrame.new( -285.296234,16.0156288,147.258972,1,0,0,0,1,0,0,0,1);check1.Parent=workspace;local check2=Instance.new("Part");check2.Anchored=true;check2.CanCollide=false;check2.Transparency=1;check2.CFrame=CFrame.new( -284.044525,16.015625,316.493317,1,0,0,0,1,0,0,0,1);check2.Parent=workspace;tw1=tweenChar(check1,4,Vector3.new(0,0.5,0));tw1.Completed:Wait();task.wait();tw2=tweenChar(check2,4,Vector3.new(0,0.5,0));tw2.Completed:Wait();task.wait();check1:Destroy();check2:Destroy();end end});local LocationSection=Tabs.Main:AddSection("Locations");local Locations={Hatsrus={locname="Hats R Us",cords=CFrame.new(49.1851654,16, -38.783886,1,0,0,0,1,0,0,0,1)},JohnFirework={locname="John's Fireworks",cords=CFrame.new(41.4207916,16.625,20.3516026,1,0,0,0,1,0,0,0,1)},TacoShop={locname="Taco Shop",cords=CFrame.new( -138.405777,14.1156321,15.3377819,1,0,0,0,1,0,0,0,1)},CrimBase={locname="Cartel Base",cords=CFrame.new( -69.7434464, -21.6356697, -132.285736,1,0,0,0,1,0,0,0,1)}};locationsValues={};for _,v in pairs(Locations) do table.insert(locationsValues,v.locname);end local locationDropdown=Tabs.Main:AddDropdown("locationdropdown",{Title="Select Location",Description="",Values=locationsValues,Multi=false,Default=1});locationDropdown:OnChanged(function(val) targetLocation=val;end);Tabs.Main:AddButton({Title="Goto Location",Description="",Callback=function() print(targetLocation);if (targetLocation==nil) then return;end for key,loctable in pairs(Locations) do if (loctable.locname==targetLocation) then local part=Instance.new("Part");part.Anchored=true;part.CanCollide=false;part.Transparency=1;part.CFrame=loctable.cords;part.Parent=workspace;tw=tweenChar(part,4,Vector3.new(0,0,0));tw.Completed:Wait();task.wait();part:Destroy();end end end});local GunSection=Tabs.Combat:AddSection("Buy Tools");dropdownTools={};for toolName,toolInfo in pairs(buyableTools) do table.insert(dropdownTools,toolInfo.toolname   .. " ($"   .. toolInfo.toolprice   .. ")" );end local toolDropdown=Tabs.Combat:AddDropdown("toolDropdown",{Title="Select Tool",Description="",Values=dropdownTools,Multi=false,Default=1});toolDropdown:OnChanged(function(Value) if (Value==nil) then return;end local pattern="^([^%$]+)%s*%($%d+%)$";local itemName=string.match(Value,pattern);itemName=string.gsub(itemName,"%s+$","");for key,toolInfo in pairs(buyableTools) do if (toolInfo.toolname==itemName) then selectedTool=buyableTools[key];end end end);Tabs.Combat:AddButton({Title="Buy Tool",Description="Buys selected tool.",Callback=function() if (selectedTool==nil) then Fluent:Notify({Title="vally Pro - Buy Tool",Content="Invalid Tool Selected.",Duration=5});return;end res=buyTool(selectedTool);if (res==nil) then Fluent:Notify({Title="vally Pro - Buy Tool",Content="Tool bought.",Duration=5});else Fluent:Notify({Title="vally Pro - Buy Tool",Content="You do not have enough money for this lolll",Duration=5});end end});Tabs.Combat:AddButton({Title="Get free AK-47",Description="Only works if you don't have one yet!!!",Callback=function() local lchar=lplr.Character or lplr.CharacterAdded:Wait() ;if (lchar:FindFirstChild("AK-47") or lplr.Backpack:FindFirstChild("AK-47")) then Fluent:Notify({Title="vally Pro - Get AK",Content="You already have an AK-47!",Duration=5});return;else for _,v in pairs(workspace:GetChildren()) do if (v:IsA("MeshPart") and (v.Name=="Ak") and v:FindFirstChild("ProximityPrompt") and  not v:FindFirstChild("BillboardGui") and (lchar:WaitForChild("Humanoid").Health>0)) then local hrpPos=lchar:WaitForChild("HumanoidRootPart").CFrame;v.Orientation=Vector3.new(0,0,0);local part=Instance.new("Part");part.Anchored=true;part.CanCollide=false;part.Transparency=1;part.CFrame=hrpPos;part.Parent=workspace;tw1=tweenChar(v,2,Vector3.new(0,0,0));tw1.Completed:Wait();task.wait(1);fireproximityprompt(v.ProximityPrompt);task.wait(1);tw2=tweenChar(part,2,Vector3.new(0,3,0));tw2.Completed:Wait();task.wait();part:Destroy();end end end end});local modsSection=Tabs.Combat:AddSection("Gun Mods");Tabs.Combat:AddParagraph({Title="Only works on supported weapons!! sry",Content=""});Tabs.Combat:AddButton({Title="Turn Gun into Genocide Device",Description="No one can escape this gun.",Callback=function() gunMod("op");end});Tabs.Combat:AddButton({Title="Infinite Damage",Description="out of my way",Callback=function() gunMod("damage");end});Tabs.Combat:AddButton({Title="Infinite Ammo",Description="idk what to say yes gives you inf ammo",Callback=function() gunMod("ammo");end});local KillSection=Tabs.Combat:AddSection("Premades");local premadePackages={CasualCombat={"P90","Bat"},Fighter={"M4A1","Grenade","C4","C4"},Border={"Passport","Permit"},CompleteBorder={"Passport","Permit","Work Permit","Trade Permit","Firearms Permit"},Juggernaut={"Minigun","RPG","C4","Molotov"}};for key,v in pairs(premadePackages) do totalPrice=0;for _,tool in pairs(v) do for _,tableToolInfo in pairs(buyableTools) do if (tableToolInfo.toolname==tool) then totalPrice+=tonumber(tableToolInfo.toolprice) end end end Tabs.Combat:AddButton({Title="Buy "   .. key   .. " Package ($"   .. totalPrice   .. ")" ,Description="",Callback=function() totalPrice=0;for _,tool in pairs(v) do for _,tableToolInfo in pairs(buyableTools) do if (tableToolInfo.toolname==tool) then totalPrice+=tonumber(tableToolInfo.toolprice) end end end if (checkBalance()<totalPrice) then Fluent:Notify({Title="vally Pro - Premades",Content="Not enough money to buy "   .. key   .. " Package!" ,Duration=5});return;end for _,tool in pairs(v) do for _,tableToolInfo in pairs(buyableTools) do print(tableToolInfo,tableToolInfo.toolname,tableToolInfo.toolprice,tool);if (tableToolInfo.toolname==tool) then res=buyTool(tableToolInfo);end end end end});end local KillSection=Tabs.Players:AddSection("Kill Players");Tabs.Players:AddParagraph({Title="you need a gun for this. gun will be bought automatically\nif you dont have one",Content=""});Tabs.Players:AddParagraph({Title="you can not kill players on your team",Content=""});local chaoSection=Tabs.Players:AddSection("Chaos");Tabs.Players:AddButton({Title="Kill All",Description="Kills everyone",Callback=function() Fluent:Notify({Title="vally Pro - Players",Content="Killing everyone. RUNNNNNNN!",Duration=5});for _,v in pairs(game.Players:GetPlayers()) do if (v.Team==lplr.Team) then continue;end task.wait();res=killPlayer(v);if (res=="no") then Fluent:Notify({Title="vally Pro - Players",Content="Not enough money to buy weapon for Kill command!",Duration=5});return;end end Fluent:Notify({Title="vally Pro - Players",Content="Killall ran.",Duration=5});end});local playersSection1=Tabs.Players:AddSection("Single Target");local targetInput=Tabs.Players:AddInput("targetPlr",{Title="Target Player",Default="",Placeholder="Enter Player Name",Numeric=false,Finished=true,Callback=function(val) findPlayer(val);end});Tabs.Players:AddToggle("viewplr",{Title="View Target Player",Description="",Callback=function(state) if state then viewingPlayer=true;connector=runService.Stepped:Connect(function() if  not game:GetService("Players"):FindFirstChild(targetPlayer.Name) then Fluent:Notify({Title="vally Pro - Players",Content="Player has left or could not be found!",Duration=5});state=false;viewingPlayer=false;connector:Disconnect();camera_view(lplr.Character.Humanoid);return;elseif viewingPlayer then local targetChar=targetPlayer.Character or targetPlayer.CharacterAdded:Wait() ;camera_view(targetChar:WaitForChild("Humanoid"));elseif  not viewingPlayer then connector:Disconnect();return;end end);else viewingPlayer=false;camera_view(lplr.Character.Humanoid);end end});Tabs.Players:AddButton({Title="Goto Target Player",Description="",Callback=function() if  not game:GetService("Players"):FindFirstChild(targetPlayer.Name) then Fluent:Notify({Title="vally Pro - Players",Content="Player has left or could not be found!",Duration=5});else local targChar=targetPlayer.Character or targetPlayer.CharacterAdded:Wait() ;local hrp=targChar:WaitForChild("HumanoidRootPart");local lChar=lplr.Character or lplr.CharacterAdded:Wait() ;local hum=lChar:WaitForChild("Humanoid");if (hum.Health<=0) then return;end tweenChar(hrp,1.5,Vector3.new(0,0,0));end end});Tabs.Players:AddButton({Title="Kill Target Player",Description="",Callback=function() if ((targetPlayer==nil) or  not game:GetService("Players"):FindFirstChild(targetPlayer.Name)) then Fluent:Notify({Title="vally Pro - Players",Content="Invalid Target.",Duration=5});return;elseif (targetPlayer.Team==lplr.Team) then Fluent:Notify({Title="vally Pro - Players",Content="Player is in your team.",Duration=5});return Fluent:Notify({Title="vally Pro - Players",Content="Killing "   .. targetPlayer.Name ,Duration=5});else res=killPlayer(targetPlayer);if (res=="no") then Fluent:Notify({Title="vally Pro - Players",Content="Not enough money to buy weapon for Kill command!",Duration=5});return;end end end});Tabs.Players:AddParagraph({Title="This only works with players who have the duffel bag\ngamepass. You have to pay double of what you want to give.",Content=""});local targetMoneyAmount=0;local giveMoneyAmount=Tabs.Players:AddInput("giveMoneyAmount",{Title="Money Amount",Default="",Placeholder="Enter an Amount",Numeric=true,Finished=false,Callback=function(val) targetMoneyAmount=val;end});Tabs.Players:AddButton({Title="Give Money",Description="omg your so nicee",Callback=function() if ( not targetPlayer or  not game:GetService("Players"):FindFirstChild(targetPlayer.Name)) then Fluent:Notify({Title="vally Pro - Give Money",Content="Invalid Player.",Duration=5});return;end local char=targetPlayer.Character or targetPlayer.CharacterAdded:Wait() ;local db=char:FindFirstChildOfClass("Tool");if (db and (db.Name=="Duffel Bag")) then db=db;elseif targetPlayer.Backpack:FindFirstChild("Duffel Bag") then db=targetPlayer.Backpack:FindFirstChild("Duffel Bag");else Fluent:Notify({Title="vally Pro - Give Money",Content="Player does not have Duffel Bag in inventory!",Duration=5});return;end targetMoneyAmount=tonumber(targetMoneyAmount);if (targetMoneyAmount<5) then Fluent:Notify({Title="vally Pro - Give Money",Content="Amount too small.",Duration=5});else targetMoneyAmount=math.floor(targetMoneyAmount/5 ) * 5 ;print(targetMoneyAmount);local molotovAmount=targetMoneyAmount/5 ;if (checkBalance()<(molotovAmount * 10)) then Fluent:Notify({Title="vally Pro - Give Money",Content="You do not have enough money.\nMoney needed: "   .. tostring(molotovAmount * 10 ) ,Duration=5});return;else repeat molotovAmount-=1 local args={10,game:GetService("ReplicatedStorage"):WaitForChild("Tools"):WaitForChild("Molotov"),game:GetService("Players"):WaitForChild(targetPlayer.Name)};game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("BuyTool"):FireServer(unpack(args));until molotovAmount<=0  end end end});local playerSection2=Tabs.Players:AddSection("Team Target");local teamDropdown=Tabs.Players:AddDropdown("targetTeam",{Title="Target Team",Description="Set a team as target",Values={"Foreigner","Citizen","Guard"},Multi=false,Default=1});teamDropdown:OnChanged(function(val) print(val);if (val==nil) then return;end if (val==targetTeam) then targetTeam=game.Teams:FindFirstChild(val);return;end targetTeam=game.Teams:FindFirstChild(val);Fluent:Notify({Title="vally Pro - Players",Content="Set Team "   .. targetTeam.Name   .. " as Target." ,Duration=5});end);Tabs.Players:AddButton({Title="Kill Target Team",Description="Kills target team",Callback=function() if (targetTeam==nil) then Fluent:Notify({Title="vally Pro - Players",Content="Invalid Team.",Duration=5});return;elseif (lplr.Team==targetTeam) then Fluent:Notify({Title="vally Pro - Players",Content="this is your team dumbass",Duration=5});return;end Fluent:Notify({Title="vally Pro - Players",Content="Killing Team "   .. targetTeam.Name ,Duration=5});for _,v in pairs(game.Players:GetPlayers()) do if (v.Team==targetTeam) then res=killPlayer(v);if (res=="no") then Fluent:Notify({Title="vally Pro - Players",Content="Not enough money to buy weapon for Kill command!",Duration=5});return;end end end end});local AutofarmSection=Tabs.Autofarm:AddSection("Autofarming Methods");Tabs.Autofarm:AddParagraph({Title="If the autofarm doesn't work please walk closer to the vendor\nof the item you need for that method.",Content=""});local sickleMethod=Tabs.Autofarm:AddToggle("sickle",{Title="Autofarm (Sickle Method)",Description="Perfect Method for Starter Money.",Default=false,Callback=function(state) if state then if autofarmActive then Fluent:Notify({Title="vally Pro - Autofarm",Content="Autofarm already active! Please disable other autofarm first!",Duration=5});return;elseif (lplr.TeamColor~=BrickColor.new("Medium stone grey")) then Fluent:Notify({Title="vally Pro - Autofarm",Content="You need to become Foreigner for this method!",Duration=5});return;end autofarmActive=true;Fluent:Notify({Title="vally Pro - Autofarm",Content="Starting Autofarm (Sickle Method).",Duration=5});task.spawn(function() while autofarmActive do autofarm_sickle();end end);elseif ((state==false) and (autofarmActive==true)) then autofarmActive=false;Fluent:Notify({Title="vally Pro - Autofarm",Content="Autofarm stopped.",Duration=5});end end});local minesMethod=Tabs.Autofarm:AddToggle("mines",{Title="Autofarm (Mines Method) [CURRENTLY UNSTABLE]",Description="Advanced method. Highly profitable.",Default=false,Callback=function(state) if state then if autofarmActive then Fluent:Notify({Title="vally Pro - Autofarm",Content="Autofarm already active! Please disable other autofarm first!",Duration=5});return;elseif (lplr.TeamColor~=BrickColor.new("Institutional white")) then Fluent:Notify({Title="vally Pro - Autofarm",Content="You need to become Citizen for this method!",Duration=5});return;end autofarmActive=true;Fluent:Notify({Title="vally Pro - Autofarm",Content="Starting Autofarm (Mines Method).",Duration=5});task.spawn(function() while autofarmActive do autofarm_mines();end end);elseif ((state==false) and (autofarmActive==true)) then autofarmActive=false;Fluent:Notify({Title="vally Pro - Autofarm",Content="Autofarm stopped.",Duration=5});end end});local broomMethod=Tabs.Autofarm:AddToggle("broom",{Title="Autofarm (Broom Method) [CURRENTLY UNSTABLE]",Description="Not really profitable",Default=false,Callback=function(state) if state then if autofarmActive then Fluent:Notify({Title="vally Pro - Autofarm",Content="Autofarm already active! Please disable other autofarm first!",Duration=5});return;elseif (lplr.TeamColor~=BrickColor.new("Medium stone grey")) then Fluent:Notify({Title="vally Pro - Autofarm",Content="You need to become Foreigner for this method!",Duration=5});return;end autofarmActive=true;Fluent:Notify({Title="vally Pro - Autofarm",Content="Starting Autofarm (Broom Method).",Duration=5});task.spawn(function() while autofarmActive do autofarm_broom();end end);elseif ((state==false) and (autofarmActive==true)) then autofarmActive=false;Fluent:Notify({Title="vally Pro - Autofarm",Content="Autofarm stopped.",Duration=5});end end});local CreditsSection=Tabs.More:AddSection("Info");Tabs.More:AddParagraph({Title="Like the quality of this script? This has no keysystem or\nany monetization so just join my Discord server. Pwease!",Content=""});Tabs.More:AddButton({Title="Copy Discord Invite",Description="",Callback=function() setclipboard("https://discord.gg/sEXECdC3Et");Fluent:Notify({Title="vally Pro - Discord",Content="Invite copied to clipboard. your so cool",Duration=5});end});local CreditsSection=Tabs.More:AddSection("Credits");Tabs.More:AddParagraph({Title="UI Library: Fluent/dawid\nEverything Else: Me",Content=""});Tabs.More:AddParagraph({Title="so swag",Content=""});end Window:SelectTab(1);Fluent:Notify({Title="vally Pro - Loader",Content="vally Pro loaded.",Duration=8}); end